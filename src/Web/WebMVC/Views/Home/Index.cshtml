@model WebMVC.PaginatedList<WebMVC.Models.PlateViewModel>

@{
    ViewData["Title"] = "Home Page";
}

<h1>Plate Registry</h1>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <label>Find by registration: <input type="text" name="SearchTerm" value="@ViewData["CurrentFilter"]" /></label>
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Registration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().PurchasePrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().SalePrice)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var plate in Model)
        {
            <tr>
                <td>@plate.Registration</td>
                <td>@plate.PurchasePrice</td>
                <td>@(plate.SalePrice * (decimal)1.2)</td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>